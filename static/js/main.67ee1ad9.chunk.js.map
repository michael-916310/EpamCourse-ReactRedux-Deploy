{"version":3,"sources":["lib.js","Pages/SearchPage/searchPageActions.js","Pages/SearchPage/searchPageReducer.js","Pages/FavoritesPage/favoritesPageActions.js","Pages/FavoritesPage/favoritesPageReducer.js","Pages/FilmPage/filmPageActions.js","Pages/FilmPage/filmPageReducer.js","redux/reducer.js","redux/store.js","Components/ModalComp/ModalComp.js","Components/SearchComp/SearchComp.js","Components/Modal2ButtonsComp/Modal2ButtonsComp.js","Components/FilmCardComp/FilmCardComp.js","Components/FilmListComp/FilmListComp.js","Components/FooterComp/FooterComp.js","Components/SpinnerComp/SpinnerComp.js","Pages/SearchPage/SearchPage.js","Components/FilmDetailComp/FilmDetailComp.js","Pages/FilmPage/FilmPage.js","Pages/FavoritesPage/FavoritesPage.js","App.js","index.js"],"names":["baseDeployURL","getFilmList","searchString","searchArray","byTitle","byDirector","byID","fetch","then","response","ok","json","Error","status","data","catch","e","console","log","fullList","filter","el","i","title","toUpperCase","id","includes","director","getFavoritesArray","favString","localStorage","getItem","favArr","split","map","item","setFilmList","filmList","searchByTitle","type","lastSearchString","lastSearchByTitle","searchPageInitialState","isFetching","isFetchingError","favoritesPageInitialState","favoritesList","filmPageInitialState","posterUrl","year","runtime","plot","actors","reducer","combineReducers","searchPage","state","action","newSearchString","flag","favoritesPage","filmPage","store","configureStore","ModalComp","props","document","createElement","modalRoot","getElementById","this","appendChild","removeChild","ReactDOM","createPortal","children","React","Component","SearchComp","handleSubmit","preventDefault","querySelector","value","onSubmit","setState","showModalEmptySearch","handleByTitleClick","onSearchByChange","handleByDirectorClick","handleCloseModal","handleGoToFavorites","window","location","assign","byTitleClassName","byDirectorClassName","className","onClick","onChange","onSearchStringChange","Modal2ButtonsComp","message","actionButtonName","onActionClick","onCloseClick","FilmCardComp","handleOpenModalClick","flagAddToFavorites","showModalAddToFavorites","flagRemoveFromFavorites","showModalRemoveFromFavorites","handleAddClick","setItem","join","handleCloseClick","handleRemoveClick","newFav","Number","refreshFilms","src","alt","onPosterClick","genres","FilmListComp","href","listElement","key","toString","handlePosterClick","renderFirstLine","FooterComp","SpinnerComp","isLoading","mapDispatchToProps","searchStringChange","text","searchByTitleChange","loadFilms","dispatch","result","connect","s","URLSearchByTitle","URLFilm","match","params","filmName","url","URL","searchParams","has","Boolean","get","sortFilms","byDate","compare","item1","item2","newList","sort","handleSortByRuntime","handleSortByDate","Fragment","target","SearchByTitle","origin","set","isbyTitle","length","renderFistLine","FilmDetailComp","FilmPage","filmURL","loadFilmDesc","loadFilmByDirector","mapDispathcToProps","filmTitle","Array","isArray","setFilmDesc","FavoritesPage","loadFavoritesFilmList","handleGoToSerach","idArray","App","basename","path","component","SearchPage","render","StrictMode"],"mappings":"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","file":"static/js/main.67ee1ad9.chunk.js","sourcesContent":["const url=\"https://my-json-server.typicode.com/michael-916310/my-json-server/movies\";\r\nexport const baseDeployURL=\"/EpamCourse-ReactRedux-Deploy\";\r\n\r\nfunction loadFilmList (){\r\n  return fetch(url)\r\n  .then(response => {\r\n    if (response.ok) {\r\n      return response.json()\r\n    } else {\r\n      throw new Error(`Fetching data-wrong response-status:${response.status}`);\r\n    }\r\n  }) \r\n  .then(data => {\r\n    return data;\r\n  })\r\n  .catch(e=>console.log(e));\r\n}\r\n\r\nexport function getFilmList({searchString, searchArray, byTitle, byDirector, byID}){\r\n\r\n  return loadFilmList()\r\n    .then((fullList)=>{\r\n\r\n      return fullList.filter((el)=>{\r\n        let i;\r\n        if (byTitle) {\r\n          i = el.title.toUpperCase();\r\n        } else if (byDirector) {\r\n          i = el.director.toUpperCase();\r\n        } else if (byID) {\r\n          i = el.id;\r\n          return searchArray.includes(i);\r\n        } else {\r\n          return false;\r\n        }\r\n        \r\n        return i.includes(searchString.toUpperCase())\r\n      })\r\n\r\n    })\r\n\r\n}\r\n\r\nexport const getFavoritesArray=()=>{\r\n  let favString = localStorage.getItem('favoritesArray');\r\n  let favArr=[];\r\n  if (favString) {\r\n    favArr = favString.split(',');\r\n  }   \r\n  return favArr.map((item)=>+item)\r\n}\r\n\r\n","import {getFilmList} from '../../lib';\r\n\r\nexport const SEARCH_STRING_CHANGE = 'SEARCH_STRING_CHANGE';\r\nexport const SEARCH_BY_TITLE = 'SEARCH_BY_TITLE';\r\nexport const SET_FILM_LIST = 'SET_FILM_LIST';\r\nexport const IS_FETCHING = 'IS_FETCHING';\r\n\r\nexport const searchStringChange = (text)=>{\r\n    return {\r\n        type: SEARCH_STRING_CHANGE,\r\n        newSearchString: text,\r\n    }\r\n}\r\n\r\nexport const searchByTitleChange = (flag) => {\r\n    return {\r\n        type: SEARCH_BY_TITLE, \r\n        flag: flag\r\n    }\r\n}\r\n\r\nexport const setFilmList = (filmList, searchString, searchByTitle) => {\r\n    return {\r\n        type: SET_FILM_LIST,\r\n        filmList: filmList,\r\n        lastSearchString: searchString,\r\n        lastSearchByTitle: searchByTitle\r\n    }\r\n}\r\n\r\nconst startFetching = ()=>{\r\n    return {\r\n        type: IS_FETCHING,\r\n        isFetching: true,\r\n    }\r\n}\r\n\r\nconst stopFetching = ()=>{\r\n    return {\r\n        type: IS_FETCHING,\r\n        isFetching: false,\r\n    }\r\n}\r\n\r\n\r\nexport const loadFilms = ({searchString, searchByTitle})=>(\r\n    (dispatch) =>{\r\n        dispatch(startFetching());\r\n\r\n        return getFilmList({\r\n            searchString: searchString,\r\n            byTitle: searchByTitle,\r\n            byDirector: !searchByTitle\r\n          }).then(result=>{\r\n            dispatch(setFilmList(\r\n                result,\r\n                searchString,\r\n                searchByTitle\r\n            ));\r\n            dispatch(stopFetching());\r\n          });\r\n    }\r\n)\r\n\r\n\r\n","import {SEARCH_STRING_CHANGE, \r\n        SEARCH_BY_TITLE,\r\n        SET_FILM_LIST,\r\n        IS_FETCHING} from './searchPageActions';\r\n\r\nconst searchPageInitialState = {\r\n    searchString: '',\r\n    searchByTitle: true,\r\n    filmList: [],\r\n    lastSearchString: '',\r\n    lastSearchByTitle: true,\r\n    isFetching: false,\r\n    isFetchingError: false,\r\n}\r\n\r\nexport function searchPageReducer(state = searchPageInitialState, action) {\r\n    switch (action.type) {\r\n        case SEARCH_STRING_CHANGE: \r\n            return {...state, searchString: action.newSearchString};\r\n        case SEARCH_BY_TITLE:\r\n            return {...state, searchByTitle: action.flag};\r\n        case SET_FILM_LIST:\r\n            return {...state, filmList: action.filmList, \r\n                    lastSearchString: action.lastSearchString, \r\n                    lastSearchByTitle: action.lastSearchByTitle};\r\n        case IS_FETCHING:\r\n            return {...state, isFetching: action.isFetching, isFetchingError: false};\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n","import {getFilmList} from '../../lib';\r\n\r\nexport const SET_FAVORITES_FILM_LIST = 'SET_FAVORITES_FILM_LIST';\r\nexport const IS_FAVORITES_FETCHING = 'IS_FAVORITES_FETCHING';\r\n\r\nconst setFavoritesFilmList = (filmList)=>{\r\n    return{\r\n        type: SET_FAVORITES_FILM_LIST,\r\n        filmList: filmList,\r\n    }\r\n}\r\n\r\nconst startFetching = ()=>{\r\n    return {\r\n        type: IS_FAVORITES_FETCHING,\r\n        isFetching: true,\r\n    }\r\n}\r\n\r\nconst stopFetching = ()=>{\r\n    return {\r\n        type: IS_FAVORITES_FETCHING,\r\n        isFetching: false,\r\n    }\r\n}\r\n\r\nexport const loadFavoritesFilmList = (idArray) => (\r\n    (dispatch)=>{\r\n\r\n        dispatch(startFetching());\r\n        return getFilmList({\r\n            searchArray: idArray, \r\n            byID: true,\r\n          }).then(result=>{\r\n            dispatch( setFavoritesFilmList(result) );\r\n            dispatch(stopFetching());\r\n          })\r\n    }\r\n)\r\n\r\n","import {SET_FAVORITES_FILM_LIST, IS_FAVORITES_FETCHING} from './favoritesPageActions';\r\n\r\n\r\nconst favoritesPageInitialState = {\r\n    favoritesList : [],\r\n    isFetching: false,\r\n}\r\n\r\nexport function favoritesPageReducer(state = favoritesPageInitialState, action){\r\n    switch (action.type) {\r\n        case SET_FAVORITES_FILM_LIST:\r\n            return {...state, favoritesList: action.filmList};\r\n        case IS_FAVORITES_FETCHING:\r\n            return {...state, isFetching: action.isFetching, isFetchingError: false};            \r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\n","import {getFilmList} from './../../lib';\r\n\r\nexport const FILM_PAGE_SET_FILM_DESC = 'FILM_PAGE_SET_FILM_DESC';\r\nexport const FILM_PAGE_SET_FILM_LIST = 'FILM_PAGE_SET_FILM_LIST';\r\nexport const IS_FILM_PAGE_DESC_FETCHING = 'IS_FILM_PAGE_DESC_FETCHING';\r\n\r\n\r\nconst setFilmDesc=(result)=>{\r\n    return {\r\n        type: FILM_PAGE_SET_FILM_DESC,\r\n\r\n        posterUrl: result.posterUrl,\r\n        title: result.title,\r\n        year: result.year,\r\n        runtime: result.runtime,\r\n        plot: result.plot,\r\n        director: result.director,\r\n        actors: result.actors\r\n    }\r\n}\r\n\r\nconst startFilmDescFetching = () =>{\r\n    return {\r\n        type: IS_FILM_PAGE_DESC_FETCHING,\r\n        isFetching: true,\r\n    }\r\n}\r\n\r\nconst stopFilmDescFetching = () =>{\r\n    return {\r\n        type: IS_FILM_PAGE_DESC_FETCHING,\r\n        isFetching: false,\r\n    }\r\n}\r\n\r\nconst setFilmList = (result) => {\r\n    return {\r\n        type:FILM_PAGE_SET_FILM_LIST,\r\n        filmList: result,\r\n    }\r\n}\r\n\r\nexport const loadFilmDesc = (filmTitle) => (\r\n    (dispatch)=>{\r\n\r\n        dispatch(startFilmDescFetching());\r\n        return getFilmList({\r\n            searchString: filmTitle, \r\n            byTitle:true,\r\n          }).then(result=>{\r\n            if (Array.isArray(result) && result.length === 1) {\r\n                dispatch(setFilmDesc(result[0]));\r\n            }\r\n            dispatch(stopFilmDescFetching());\r\n          })\r\n    }\r\n)\r\n\r\nexport const loadFilmByDirector = (director) => (\r\n    (dispatch)=>{\r\n\r\n        dispatch(startFilmDescFetching());        \r\n        return getFilmList({\r\n            searchString: director,\r\n            byDirector:true,            \r\n        }).then((result)=>{\r\n            if (result.length>0){\r\n                dispatch(setFilmList(result));\r\n            }\r\n            dispatch(stopFilmDescFetching());            \r\n        })      \r\n    }\r\n)\r\n\r\n","import {\r\n    FILM_PAGE_SET_FILM_DESC, \r\n    IS_FILM_PAGE_DESC_FETCHING,\r\n    FILM_PAGE_SET_FILM_LIST} from './filmPageActions';\r\n\r\nconst filmPageInitialState = {\r\n    posterUrl: '',\r\n    title: '',\r\n    year: '',\r\n    runtime: '',\r\n    plot: '',\r\n    director: '',\r\n    actors: '',\r\n    \r\n    filmList:[],\r\n    isFetching: false,    \r\n}\r\n\r\nexport function filmPageReducer(state=filmPageInitialState, action) {\r\n    switch (action.type) {\r\n        case FILM_PAGE_SET_FILM_DESC:\r\n            return {\r\n                ...state, \r\n                posterUrl: action.posterUrl, \r\n                title: action.title, \r\n                year: action.year,\r\n                runtime: action.runtime,\r\n                plot: action.plot,\r\n                director: action.director,\r\n                actors: action.actors,\r\n            }\r\n        case FILM_PAGE_SET_FILM_LIST:\r\n            return {...state, filmList:action.filmList};\r\n        case IS_FILM_PAGE_DESC_FETCHING: \r\n            return {...state, isFetching: action.isFetching }\r\n        default: \r\n            return state;\r\n    }\r\n}","import {combineReducers} from 'redux';\r\nimport {searchPageReducer as searchPage} from '../Pages/SearchPage/searchPageReducer'\r\nimport {favoritesPageReducer as favoritesPage} from './../Pages/FavoritesPage/favoritesPageReducer';\r\nimport {filmPageReducer as filmPage} from './../Pages/FilmPage/filmPageReducer';\r\n\r\nexport const reducer = combineReducers({\r\n    searchPage, \r\n    favoritesPage,\r\n    filmPage\r\n});\r\n\r\n","import {createStore, applyMiddleware, compose} from 'redux';\r\nimport {configureStore} from '@reduxjs/toolkit'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {reducer} from './reducer';\r\n\r\n/*\r\nexport let store = createStore (\r\n    reducer,\r\n    compose(\r\n        applyMiddleware(thunkMiddleware),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n\r\n);\r\n*/\r\n\r\n\r\nexport let store = configureStore ({\r\n    reducer: reducer\r\n})\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './ModalComp.scss';\r\n\r\nexport class ModalComp extends React.Component{\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.el = document.createElement('div');\r\n    this.modalRoot = document.getElementById('modal-root');\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.modalRoot.appendChild(this.el);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.modalRoot.removeChild(this.el);\r\n  }\r\n\r\n  render() {\r\n    return ReactDOM.createPortal(\r\n      this.props.children,\r\n      this.el\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './SearchComp.scss';\r\nimport {ModalComp} from './../ModalComp/ModalComp';\r\nimport {baseDeployURL} from './../../lib';\r\n\r\n\r\nexport class SearchComp extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      showModalEmptySearch:false,\r\n    }\r\n  }\r\n\r\n  handleSubmit =(e) => {\r\n    e.preventDefault();\r\n    let el = document.querySelector(\".search-comp__search-string\");\r\n    if (el) {\r\n      if (el.value) {\r\n        this.props.onSubmit();\r\n        return;\r\n      }\r\n    }\r\n    this.setState({\r\n      showModalEmptySearch:true,\r\n    });\r\n  }\r\n\r\n  handleByTitleClick =()=>{\r\n    this.props.onSearchByChange(true);\r\n  }\r\n\r\n  handleByDirectorClick = ()=>{\r\n    this.props.onSearchByChange(false);\r\n  }\r\n  \r\n  handleCloseModal= ()=> {\r\n    this.setState({\r\n      showModalEmptySearch:false,\r\n    });\r\n  }\r\n\r\n  handleGoToFavorites=()=>{\r\n    window.location.assign(`${baseDeployURL}/favorites`)\r\n  }\r\n\r\n  render(){\r\n\r\n    let byTitleClassName=\"search-comp__search-by-title\";\r\n    let byDirectorClassName=\"search-comp__search-by-director\";\r\n    if (this.props.searchByTitle) {\r\n      byTitleClassName = byTitleClassName + \" search-comp__search-by_selected\"\r\n    } else {\r\n      byDirectorClassName = byDirectorClassName + \" search-comp__search-by_selected\"\r\n    }\r\n\r\n    return (\r\n      <div className=\"search-comp-outer-container\">\r\n        <div className=\"search-comp-inner-container\">\r\n\r\n          <div className=\"search-comp__caption1\">\r\n            netflixroulette\r\n            <input \r\n              type='button' \r\n              className=\"search-comp__button\" \r\n              onClick={this.handleGoToFavorites}\r\n              value='Go to FAVORITES'/>\r\n          </div>\r\n          <div className=\"search-comp__caption2\">FIND YOUR MOVIE</div>\r\n\r\n          <form onSubmit={this.handleSubmit} >\r\n\r\n            <input type=\"text\"\r\n              className=\"search-comp__search-string\"\r\n              onChange={this.props.onSearchStringChange}\r\n              value={this.props.searchString}\r\n            />\r\n          \r\n            <div className=\"search-comp__buttom-line\">\r\n              <div>\r\n                <span className=\"search-comp__search-by-caption\">SEARCH BY</span>\r\n                <input className={byTitleClassName} type=\"button\" onClick={this.handleByTitleClick} value=\" TITLE \"/>\r\n                <input className={byDirectorClassName} type=\"button\" onClick={this.handleByDirectorClick} value=\"DIRECTOR\"/>\r\n              </div>\r\n\r\n              <div>\r\n                <input className=\"search-comp__button\" type=\"submit\" value=\"  SEARCH  \"/>\r\n              </div>\r\n            </div>  \r\n\r\n          </form>\r\n\r\n          {this.state.showModalEmptySearch && (\r\n          <ModalComp>\r\n            <div className='search-comp__modal-nothing-to-search-background'>\r\n              <div className='search-comp__modal-nothing-to-search-outer-container'>\r\n                There is nothing to search. Please enter non empty string to search.\r\n                <div className='search-comp__modal-nothing-to-search-button-container'>\r\n                  <input \r\n                    className='search-comp__modal-nothing-to-search-button' \r\n                    type='button' value='CLOSE' onClick={this.handleCloseModal}/>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </ModalComp> )}\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport {ModalComp} from './../ModalComp/ModalComp';\r\nimport  './Modal2ButtonsComp.scss';\r\n\r\nexport function Modal2ButtonsComp(props){\r\n\r\n  return(\r\n    <ModalComp>\r\n      <div className='modal-2-buttons__background'>\r\n        <div className='modal-2-buttons__outer-container'>\r\n          <div>\r\n            {props.message}\r\n          </div>\r\n          <div className='modal-2-buttons__button-container'>\r\n            <input \r\n              className='modal-2-buttons__action-button' \r\n              type=\"button\" \r\n              value={props.actionButtonName}\r\n              onClick={props.onActionClick}/>\r\n            <input \r\n              className='modal-2-buttons__action-button' \r\n              type=\"button\" \r\n              value=\"CLOSE\"\r\n              onClick={props.onCloseClick}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </ModalComp>\r\n  )\r\n}","import React from 'react';\r\nimport './FilmCardComp.scss';\r\nimport {Modal2ButtonsComp} from './../Modal2ButtonsComp/Modal2ButtonsComp';\r\nimport {baseDeployURL} from './../../lib';\r\n\r\nexport class FilmCardComp extends React.Component { \r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      showModalAddToFavorites: false,\r\n      showModalRemoveFromFavorites: false\r\n    }\r\n  }\r\n\r\n  handleOpenModalClick=()=>{\r\n    if (this.props.flagAddToFavorites) {\r\n      this.setState({\r\n        showModalAddToFavorites: true,\r\n      });\r\n    } else if (this.props.flagRemoveFromFavorites) {\r\n      this.setState({\r\n        showModalRemoveFromFavorites:true, \r\n      })\r\n    }\r\n  }\r\n\r\n  handleAddClick=()=>{\r\n    const favString = localStorage.getItem('favoritesArray');\r\n    if (favString) {\r\n      let favArr = favString.split(',');\r\n      if (!favArr.includes(\"\"+this.props.id)) {\r\n        localStorage.setItem('favoritesArray', [...favArr, [this.props.id]].join(','));\r\n      }\r\n    } else {\r\n      localStorage.setItem('favoritesArray', [this.props.id].join(','));\r\n    }\r\n\r\n    this.setState({\r\n      showModalAddToFavorites: false,\r\n    });\r\n  }\r\n\r\n  handleCloseClick=()=>{\r\n    this.setState({\r\n      showModalAddToFavorites: false,\r\n      showModalRemoveFromFavorites: false,\r\n    });\r\n  }\r\n\r\n  handleRemoveClick=(id)=>{\r\n    const favString = localStorage.getItem('favoritesArray');\r\n    if (favString) {\r\n      const favArr = favString.split(',');\r\n      const newFav= favArr.filter((item)=>{return !( Number(item) === Number(id) )})\r\n      localStorage.setItem('favoritesArray', newFav.join(','));\r\n    }\r\n\r\n    this.handleCloseClick();\r\n    this.props.refreshFilms();\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className='film-card-comp-container'>\r\n        \r\n        <img \r\n          className='film-card-comp__poster' \r\n          src={this.props.posterUrl} alt='film poster'\r\n          onClick={this.props.onPosterClick}\r\n        />\r\n        \r\n        <div className='film-card-comp__line1'>\r\n          <span className='film-card-comp__title'>{this.props.title}</span>\r\n          <span className='film-card-comp__year'>{this.props.year}</span>\r\n        </div>\r\n\r\n        <div className='film-card-comp__line2'>\r\n          <div>\r\n            {this.props.genres} <br/>\r\n            Runtime: {this.props.runtime} minute <br/>\r\n            Director: {this.props.director}\r\n          </div>\r\n          <img \r\n            className=\"film-card-comp__star\" \r\n            src={`${baseDeployURL}/img/favorites_star.ico`} alt='star'\r\n            onClick={this.handleOpenModalClick}/>\r\n        </div>\r\n\r\n        {this.state.showModalAddToFavorites && (\r\n          <Modal2ButtonsComp\r\n            message={`Add film \"${this.props.title}\" by \"${this.props.director}\" to favorites?`}\r\n            actionButtonName = 'ADD'\r\n            onActionClick={this.handleAddClick}\r\n            onCloseClick={this.handleCloseClick}\r\n          />\r\n        )}\r\n\r\n        {this.state.showModalRemoveFromFavorites && (\r\n          <Modal2ButtonsComp\r\n            message={`Remove film \"${this.props.title}\" by \"${this.props.director}\" from favorites?`}\r\n            actionButtonName = 'REMOVE'\r\n            onActionClick={()=>this.handleRemoveClick(this.props.id)}\r\n            onCloseClick={this.handleCloseClick}\r\n          />\r\n        )}\r\n\r\n    </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport {FilmCardComp} from '../FilmCardComp/FilmCardComp'\r\n\r\nimport './FilmListComp.scss';\r\nimport {baseDeployURL} from './../../lib';\r\n\r\nexport class FilmListComp extends React.Component{\r\n\r\n  handlePosterClick(title){\r\n    window.location.href=`${baseDeployURL}/film/${title}`\r\n  }\r\n\r\n  render(){\r\n    let listElement = this.props.filmList.map((item)=>\r\n    <FilmCardComp\r\n      key={item.id}\r\n      id={item.id}\r\n      posterUrl={item.posterUrl}\r\n      year = {item.year}\r\n      genres={item.genres.toString()}\r\n      title = {item.title}\r\n      director = {item.director}\r\n      runtime = {item.runtime}\r\n      onPosterClick = {()=>this.handlePosterClick(item.title)}\r\n      flagAddToFavorites ={this.props.flagAddToFavorites}\r\n      flagRemoveFromFavorites = {this.props.flagRemoveFromFavorites}\r\n      refreshFilms={this.props.refreshFilms}\r\n    />\r\n    );\r\n  \r\n    return(\r\n      <div className=\"film-list-outer-container\">\r\n        <div className=\"film-list-inner-container\">\r\n            {this.props.renderFirstLine}\r\n          <div className='film-list-comp__list'>\r\n            {listElement}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n","import React from 'react'\r\n\r\nimport './FooterComp.scss';\r\n\r\nexport function FooterComp(props){\r\n  return(\r\n    <div className=\"footer-comp-outer-container\">\r\n      <div className=\"footer-comp-inner-container\">\r\n        netflixroulette\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport {ModalComp} from './../ModalComp/ModalComp';\r\nimport {baseDeployURL} from './../../lib';\r\nimport './SpinnerComp.scss'\r\n\r\nexport function SpinnerComp(props) {\r\n    if (props.isLoading) {\r\n      return (\r\n      <ModalComp>\r\n      <div className='spinner-comp-background'>\r\n        <img  src= {`${baseDeployURL}/img/load.gif`} alt='spinner' />\r\n      </div>\r\n    </ModalComp>\r\n      )\r\n    } else {\r\n      return null;\r\n    }\r\n}","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { Fragment } from 'react'\r\n\r\nimport {SearchComp} from '../../Components/SearchComp/SearchComp';\r\nimport {FilmListComp as FilmList} from '../../Components/FilmListComp/FilmListComp';\r\nimport {FooterComp as Footer} from '../../Components/FooterComp/FooterComp';\r\nimport {SpinnerComp} from './../../Components/SpinnerComp/SpinnerComp';\r\n\r\nimport {baseDeployURL} from '../../lib';\r\nimport {searchStringChange, searchByTitleChange, loadFilms, setFilmList} from './searchPageActions';\r\nimport {connect} from 'react-redux';\r\n\r\nimport './SearchPage.scss';\r\n\r\nconst SearchPage = (props)=> {\r\n\r\n  let URLFilm = props.match.params.filmName || '';\r\n  let URLSearchByTitle;\r\n  \r\n  let url = new URL(window.location.href);\r\n  if (!url.searchParams.has('searchByTitle')) {\r\n    URLSearchByTitle = true;\r\n  }else {\r\n    URLSearchByTitle = Boolean(url.searchParams.get('searchByTitle'));\r\n  }\r\n\r\n\r\n  if  ((URLFilm !== props.lastSearchString) || \r\n      (URLSearchByTitle !== props.lastSearchByTitle)) {\r\n    props.loadFilms({\r\n      searchString: URLFilm, \r\n      searchByTitle: URLSearchByTitle}\r\n      );\r\n\r\n    props.searchStringChange(URLFilm);\r\n    props.searchByTitleChange(URLSearchByTitle);\r\n  }\r\n\r\n  const handleSearchStringChange = (e)=>{\r\n    props.searchStringChange(e.target.value);\r\n  }\r\n\r\n  const handleSearchByChange = (isbyTitle)=>{\r\n    props.searchByTitleChange(isbyTitle);\r\n  }\r\n\r\n\r\n  const handleSearch=()=>{\r\n    // Если в URL что-то не соотвествует тому что в store - редиректим как в store\r\n    if  ((URLFilm !== props.searchString) || \r\n        (URLSearchByTitle !== props.SearchByTitle)) {\r\n\r\n      let url= new URL(`${baseDeployURL}/search/${props.searchString}`, window.location.origin);\r\n      url.searchParams.set('searchByTitle', props.searchByTitle ? 1 :'');\r\n      window.location.assign(url);\r\n    }\r\n  }\r\n\r\n  const sortFilms = (byDate)=>{\r\n    let compare;\r\n\r\n    if (byDate) {\r\n      compare = (item1, item2)=>{\r\n        return (+item1.year > +item2.year) ? -1 : 1;\r\n      }\r\n    } else {\r\n      compare = (item1, item2)=>{\r\n        return (+item1.runtime > +item2.runtime) ? -1 : 1;\r\n      }\r\n    }\r\n\r\n    let newList = [...props.filmList].sort(compare);\r\n    props.setFilmList(newList, URLFilm, URLSearchByTitle);\r\n  }\r\n\r\n  const handleSortByRuntime=(e)=>{\r\n    e.preventDefault();\r\n    sortFilms(false);\r\n  }\r\n\r\n  const handleSortByDate=(e)=>{\r\n    e.preventDefault()\r\n    sortFilms(true);\r\n  }  \r\n\r\n  /* рендер-пропс для компонента FilmList */\r\n  const renderFistLine = ()=>{\r\n    let result;\r\n\r\n    if (props.filmList.length) {\r\n\r\n     result = (\r\n        /* сформируем строку вверху */\r\n        <Fragment>\r\n          <div className=\"film-list-comp__top-line\">\r\n            <div>\r\n              {props.filmList.length} movies found\r\n            </div>\r\n            <div>\r\n              SORT BY\r\n              <a \r\n                className=\"film-list-comp__sort-by-release-date\" \r\n                href=\"#\" \r\n                onClick={handleSortByDate}\r\n              >release date</a>\r\n              <a \r\n                className=\"film-list-comp__sort-by-runtime\" \r\n                href=\"#\"\r\n                onClick={handleSortByRuntime}\r\n                >runtime</a>\r\n            </div>\r\n          </div>\r\n        </Fragment>\r\n      )\r\n    } \r\n\r\n    return result;\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n\r\n      <div className='search-page-header'>\r\n        <SearchComp \r\n          searchString={props.searchString}\r\n          searchByTitle={props.searchByTitle}\r\n\r\n          onSearchStringChange={handleSearchStringChange} \r\n          onSubmit={handleSearch}\r\n          onSearchByChange = {handleSearchByChange}/>\r\n      </div>\r\n\r\n      <div className='search-page-result'>\r\n        {(props.filmList.length) ? \r\n          (\r\n          <FilmList \r\n            renderFirstLine={renderFistLine()} \r\n            filmList={props.filmList}\r\n            flagAddToFavorites={true}\r\n          />) : \r\n          (\r\n            <div className='search-page-empty-result'>No films found</div>\r\n          )\r\n        }\r\n\r\n      </div>\r\n\r\n      <div className='search-page-footer'>\r\n        <Footer/>\r\n      </div>\r\n\r\n      <SpinnerComp isLoading={props.isFetching}/>\r\n    </React.Fragment>\r\n    )\r\n} \r\n\r\nconst mapStateToProps = (state)=>{\r\n  const s = state.searchPage;\r\n  return {\r\n    searchString: s.searchString,\r\n    searchByTitle: s.searchByTitle,\r\n    filmList: s.filmList, \r\n    isFetching: s.isFetching,\r\n    lastSearchString: s.lastSearchString,\r\n    lastSearchByTitle: s.lastSearchByTitle,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  searchStringChange, \r\n  searchByTitleChange, \r\n  loadFilms,\r\n  setFilmList,\r\n}\r\n\r\nexport default connect (mapStateToProps, mapDispatchToProps) (SearchPage);\r\n\r\n","import React from 'react';\r\nimport {baseDeployURL} from './../../lib';\r\nimport './FilmDetailComp.scss';\r\n\r\nexport function FilmDetailComp(props) {\r\n  \r\n  function goToSerachPage(){\r\n    window.location.href=`${baseDeployURL}/search/${props.director}?searchByTitle=`;\r\n  }\r\n\r\n  function goToFavorites(){\r\n    window.location.assign(`${baseDeployURL}/favorites`)\r\n  }\r\n  return (\r\n    <div className='film-detail-comp-outer-container'>\r\n      <div className='film-detail-comp-inner-container'>\r\n\r\n        <div className='film-detail-comp__first-line'>\r\n          <div className='film-detail-comp__first-line-caption'>netflixroulette</div>\r\n          <div>\r\n            <input className='film-detail-comp__first-line-button' type='button' value='Go to SEARCH' onClick={goToSerachPage}/>\r\n            <input className='film-detail-comp__first-line-button' type='button' value='Go to FAVORITES' onClick={goToFavorites}/>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='film-detail-comp__totall-details-container'>\r\n          <div className='film-detail-comp__poster'>\r\n            <img className='film-detail-comp__poster-img' src={props.posterUrl} alt='POSTER IMAGE'/>\r\n          </div>\r\n          <div className='film-detail-comp__details'>\r\n            <div className='film-detail-comp__title'>\r\n              {props.title}\r\n            </div>\r\n            <div className='film-detail-comp__year'>\r\n              {props.year} {props.runtime} min\r\n            </div>\r\n            <div className='film-detail-comp__plot'>\r\n              {props.plot}\r\n            </div>\r\n            <div className='film-detail-comp__director'>\r\n              Director: {props.director}\r\n            </div>\r\n            <div className='film-detail-comp__actors'>\r\n              Cast: {props.actors}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport {FilmListComp as FilmList} from '../../Components/FilmListComp/FilmListComp';\r\nimport {FooterComp as Footer} from '../../Components/FooterComp/FooterComp';\r\nimport {FilmDetailComp} from '../../Components/FilmDetailComp/FilmDetailComp';\r\nimport {SpinnerComp} from './../../Components/SpinnerComp/SpinnerComp';\r\nimport {loadFilmDesc, loadFilmByDirector} from './filmPageActions';\r\nimport {connect} from 'react-redux';\r\n\r\nimport './FilmPage.scss'\r\n\r\nclass FilmPage extends React.Component {\r\n\r\n getFilmDesc(){\r\n   const filmURL = this.props.match.params.filmName;\r\n   if (filmURL) {\r\n     return this.props.loadFilmDesc(filmURL);\r\n   }\r\n }\r\n\r\n  componentDidMount(){\r\n    const filmURL = this.props.match.params.filmName;\r\n\r\n    if (filmURL) {\r\n      this.props.loadFilmDesc(filmURL)\r\n      .then(()=>{\r\n        if (this.props.director) {\r\n          this.props.loadFilmByDirector(this.props.director);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  render(){\r\n\r\n    return(\r\n      <React.Fragment>\r\n        \r\n        <div className='film-page-header'>\r\n          <FilmDetailComp\r\n            posterUrl={this.props.posterUrl}\r\n            title={this.props.title}\r\n            year={this.props.year}\r\n            runtime = {this.props.runtime}\r\n            plot = {this.props.plot}\r\n            director = {this.props.director}\r\n            actors = {this.props.actors}\r\n          />\r\n        </div>\r\n\r\n        <div className='film-page-content'>\r\n          <FilmList \r\n            renderFirstLine={<div>Films by {this.props.director} </div>}\r\n            filmList={this.props.filmList}\r\n            flagAddToFavorites = {true}\r\n            />\r\n        </div>\r\n        \r\n\r\n        <div className='film-page-footer'>\r\n          <Footer/>\r\n        </div>\r\n\r\n        <SpinnerComp isLoading={this.props.isLoading}/>\r\n        \r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state)=>{\r\n  const s = state.filmPage;\r\n  return {\r\n    posterUrl: s.posterUrl,\r\n    title: s.title,\r\n    year: s.year,\r\n    runtime: s.runtime,\r\n    plot: s.plot,\r\n    director: s.director,\r\n    actors: s.actors,\r\n\r\n    filmList: s.filmList,\r\n    isLoading: s.isFetching,\r\n  }\r\n}\r\n\r\nconst mapDispathcToProps = {\r\n  loadFilmDesc,\r\n  loadFilmByDirector,\r\n}\r\n\r\nexport default connect (mapStateToProps, mapDispathcToProps) (FilmPage);","import React from 'react';\r\nimport {FooterComp} from './../../Components/FooterComp/FooterComp';\r\nimport {FilmListComp} from './../../Components/FilmListComp/FilmListComp'\r\nimport {baseDeployURL, getFavoritesArray} from './../../lib';\r\nimport {loadFavoritesFilmList} from './favoritesPageActions';\r\nimport {SpinnerComp} from './../../Components/SpinnerComp/SpinnerComp';\r\nimport {connect} from 'react-redux';\r\n\r\nimport './FavoritesPage.scss';\r\n\r\nclass FavoritesPage extends React.Component {\r\n\r\n  refreshFilms=()=>{\r\n    this.props.loadFavoritesFilmList(getFavoritesArray());\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.props.loadFavoritesFilmList(getFavoritesArray());\r\n  }\r\n\r\n  handleGoToSerach(){\r\n    window.location.assign(`${baseDeployURL}`);\r\n  }\r\n\r\n  \r\n  render(){\r\n\r\n    return(\r\n      <React.Fragment>\r\n        <div className='favorites-page-header'>\r\n          <div className='favorites-page-outer-container'>\r\n            <div className='favorites-page-inner-container'>\r\n              <div className='favorites-page-container'>\r\n                <div className='favorites-page-caption'>\r\n                  YOUR FAVORITES FILMS\r\n                </div>\r\n                <div>\r\n                  <input \r\n                    type='button' \r\n                    className='favorites-page-button'\r\n                    onClick={this.handleGoToSerach}\r\n                    value='go to SEARCH' />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='favorites-page-film-list'>\r\n          {this.props.favoritesList.length === 0 ? \r\n            (\r\n              <div className='favorites-page-empty-result'>No films added to favorites</div>\r\n            )\r\n          : \r\n            (<FilmListComp \r\n              filmList={this.props.favoritesList}\r\n              flagRemoveFromFavorites={true}\r\n              refreshFilms={this.refreshFilms}\r\n            />)\r\n          }\r\n        </div>\r\n\r\n        <div className='favorites-page-fotter'>\r\n          <FooterComp/>\r\n        </div>\r\n\r\n        <SpinnerComp isLoading={this.props.isFetching}/>\r\n\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps=(state)=>{\r\n  return {\r\n    favoritesList: state.favoritesPage.favoritesList,\r\n    isFetching: state.favoritesPage.isFetching,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps={\r\n  loadFavoritesFilmList,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FavoritesPage);\r\n","import React from 'react';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\nimport {baseDeployURL} from './lib';\n\nimport 'normalize.css';\nimport './App.scss'\n\nimport SearchPage from './Pages/SearchPage/SearchPage'\nimport FilmPage from './Pages/FilmPage/FilmPage'\nimport FavoritesPage from './Pages/FavoritesPage/FavoritesPage'\n\nfunction App() {\n  return (\n    <div className='application-container'>\n      <Router basename={baseDeployURL}>\n        <Switch>\n\n          <Route path='/search/:filmName' component={SearchPage}/>\n          <Route path='/film/:filmName' component={FilmPage}/>\n          <Route path='/favorites' component ={FavoritesPage}/>\n\n          <Route path='/' component={SearchPage}/>\n\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {store} from './redux/store';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}